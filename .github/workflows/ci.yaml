name: Contracts CI

on:
  push:
    branches: [ upload-code-coverage-and-gas-report ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    env:
      PROTOCOL_DEPLOYER_PRIVATE_KEY: 123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234
      CC_TOKEN_DEPLOYER_PRIVATE_KEY: 123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234
      CMC_API_KEY: ${{ secrets.CMC_API_KEY_NEW }}
    name: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12.20.x'
          cache: 'npm'
      - run: npm install
      - run: npm run contracts:compile
      - run: npm run contracts:lint
      - run: npm run contracts:format
      - run: npm run tests:lint
      - run: npm run tests:format

  test:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    env:
      PROTOCOL_DEPLOYER_PRIVATE_KEY: 123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234
      CC_TOKEN_DEPLOYER_PRIVATE_KEY: 123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234
      CMC_API_KEY: ${{ secrets.CMC_API_KEY_NEW }}
    name: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12.20.x'
          cache: 'npm'
      - name: Install Dependencies
        run: npm install
      - name: Compile Contracts
        run: npm run contracts:compile
      - name: Contract Sizing
        run: npm run contracts:size
      - name: Unit tests + Gas Reporter
        run: npm run tests:unit
      - name: Upload Gas reporter output
        uses: actions/upload-artifact@v2
        with:
          name: gas-reporter-report
          path: GasReport.txt

  snyk:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

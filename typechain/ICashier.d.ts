/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface ICashierInterface extends ethers.utils.Interface {
  functions: {
    "addEscrowAmount(address)": FunctionFragment;
    "addEscrowTokensAmount(address,address,uint256)": FunctionFragment;
    "canUnpause()": FunctionFragment;
    "getEscrowAmount(address)": FunctionFragment;
    "getEscrowTokensAmount(address,address)": FunctionFragment;
    "onERC1155Transfer(address,address,uint256,uint256)": FunctionFragment;
    "onERC721Transfer(address,address,uint256)": FunctionFragment;
    "pause()": FunctionFragment;
    "setBosonRouterAddress(address)": FunctionFragment;
    "setTokenContractAddress(address)": FunctionFragment;
    "unpause()": FunctionFragment;
    "withdraw(uint256)": FunctionFragment;
    "withdrawDepositsSe(uint256,uint256,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addEscrowAmount",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addEscrowTokensAmount",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "canUnpause",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEscrowAmount",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getEscrowTokensAmount",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Transfer",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Transfer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setBosonRouterAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setTokenContractAddress",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "unpause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawDepositsSe",
    values: [BigNumberish, BigNumberish, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "addEscrowAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addEscrowTokensAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "canUnpause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEscrowAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEscrowTokensAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Transfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Transfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setBosonRouterAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTokenContractAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unpause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawDepositsSe",
    data: BytesLike
  ): Result;

  events: {};
}

export class ICashier extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ICashierInterface;

  functions: {
    addEscrowAmount(
      _account: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addEscrowTokensAmount(
      _token: string,
      _account: string,
      _newAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    canUnpause(overrides?: CallOverrides): Promise<[boolean]>;

    getEscrowAmount(
      _account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getEscrowTokensAmount(
      _token: string,
      _account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    onERC1155Transfer(
      _from: string,
      _to: string,
      _tokenSupplyId: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC721Transfer(
      _from: string,
      _to: string,
      _tokenIdVoucher: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setBosonRouterAddress(
      _bosonRouterAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTokenContractAddress(
      _tokensContractAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdraw(
      _tokenIdVoucher: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawDepositsSe(
      _tokenIdSupply: BigNumberish,
      _burnedQty: BigNumberish,
      _msgSender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addEscrowAmount(
    _account: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addEscrowTokensAmount(
    _token: string,
    _account: string,
    _newAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  canUnpause(overrides?: CallOverrides): Promise<boolean>;

  getEscrowAmount(
    _account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getEscrowTokensAmount(
    _token: string,
    _account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  onERC1155Transfer(
    _from: string,
    _to: string,
    _tokenSupplyId: BigNumberish,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC721Transfer(
    _from: string,
    _to: string,
    _tokenIdVoucher: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  pause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setBosonRouterAddress(
    _bosonRouterAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTokenContractAddress(
    _tokensContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unpause(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdraw(
    _tokenIdVoucher: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawDepositsSe(
    _tokenIdSupply: BigNumberish,
    _burnedQty: BigNumberish,
    _msgSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addEscrowAmount(_account: string, overrides?: CallOverrides): Promise<void>;

    addEscrowTokensAmount(
      _token: string,
      _account: string,
      _newAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    canUnpause(overrides?: CallOverrides): Promise<boolean>;

    getEscrowAmount(
      _account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEscrowTokensAmount(
      _token: string,
      _account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC1155Transfer(
      _from: string,
      _to: string,
      _tokenSupplyId: BigNumberish,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    onERC721Transfer(
      _from: string,
      _to: string,
      _tokenIdVoucher: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    pause(overrides?: CallOverrides): Promise<void>;

    setBosonRouterAddress(
      _bosonRouterAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setTokenContractAddress(
      _tokensContractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    unpause(overrides?: CallOverrides): Promise<void>;

    withdraw(
      _tokenIdVoucher: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawDepositsSe(
      _tokenIdSupply: BigNumberish,
      _burnedQty: BigNumberish,
      _msgSender: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addEscrowAmount(
      _account: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addEscrowTokensAmount(
      _token: string,
      _account: string,
      _newAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    canUnpause(overrides?: CallOverrides): Promise<BigNumber>;

    getEscrowAmount(
      _account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEscrowTokensAmount(
      _token: string,
      _account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC1155Transfer(
      _from: string,
      _to: string,
      _tokenSupplyId: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC721Transfer(
      _from: string,
      _to: string,
      _tokenIdVoucher: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setBosonRouterAddress(
      _bosonRouterAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTokenContractAddress(
      _tokensContractAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdraw(
      _tokenIdVoucher: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawDepositsSe(
      _tokenIdSupply: BigNumberish,
      _burnedQty: BigNumberish,
      _msgSender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addEscrowAmount(
      _account: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addEscrowTokensAmount(
      _token: string,
      _account: string,
      _newAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    canUnpause(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getEscrowAmount(
      _account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEscrowTokensAmount(
      _token: string,
      _account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC1155Transfer(
      _from: string,
      _to: string,
      _tokenSupplyId: BigNumberish,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC721Transfer(
      _from: string,
      _to: string,
      _tokenIdVoucher: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    pause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setBosonRouterAddress(
      _bosonRouterAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTokenContractAddress(
      _tokensContractAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdraw(
      _tokenIdVoucher: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawDepositsSe(
      _tokenIdSupply: BigNumberish,
      _burnedQty: BigNumberish,
      _msgSender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}

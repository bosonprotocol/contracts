/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FundLimitsOracle,
  FundLimitsOracleInterface,
} from "../FundLimitsOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_triggeredBy",
        type: "address",
      },
    ],
    name: "LogETHLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_triggeredBy",
        type: "address",
      },
    ],
    name: "LogTokenLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x0ddee10a",
        type: "bytes32",
      },
    ],
    name: "c_0x0ddee10a",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getETHLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newLimit",
        type: "uint256",
      },
    ],
    name: "setETHLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_newLimit",
        type: "uint256",
      },
    ],
    name: "setTokenLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061002161016960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100f17f9e2dc1e29a86738c60653a2c61b71b6ff363cb15a6f84bc1785dbdfd46fbc9d160001b61017160201b60201c565b6101237f9572c129a2757459790c139c5602c534790f305e7c7381c79baeee1e6bc44bdf60001b61017160201b60201c565b6101557f84f0445adba1ef972f3e69afb1f96d5d48f3bc4b8a60d3308150b6ad0e085d2b60001b61017160201b60201c565b670de0b6b3a7640000600181905550610174565b600033905090565b50565b610d36806101836000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80630f878aed1461007d5780634134756c1461009b5780635a860c87146100c9578063715018a6146101215780638695332f1461012b5780638da5cb5b14610159578063bc0176371461018d578063f2fde38b146101db575b600080fd5b61008561021f565b6040518082815260200191505060405180910390f35b6100c7600480360360208110156100b157600080fd5b81019080803590602001909291905050506102ad565b005b61010b600480360360208110156100df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102b0565b6040518082815260200191505060405180910390f35b61012961037d565b005b6101576004803603602081101561014157600080fd5b81019080803590602001909291905050506104ea565b005b6101616106db565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101d9600480360360408110156101a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610704565b005b61021d600480360360208110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ae0565b005b600061024d7f05357206de141f38bd12915cba7d0161c9c0adfbdc2aab35325b20f25b00b68760001b6102ad565b6102797fb58114248ff5ef017e91b29b0addf746ff64f5311bd5c3e837f9ad1ed893556f60001b6102ad565b6102a57f21fbc5db095737869e55f928c5eed87204a19e8a01876f5b6109ddc624d93e8460001b6102ad565b600154905090565b50565b60006102de7fe40f63819a18f3a0c89338e486581cf9b99ce1487431da3b2e0da0ce1ec35e8d60001b6102ad565b61030a7fd3b2a2e0f3769ffd2d4897b06dc1a508c5d39850e51381c9992585636672247260001b6102ad565b6103367ff5fb4284f687affd3587c26db5343752d5987bb95a3f83bf8071671608be079860001b6102ad565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610385610cd2565b73ffffffffffffffffffffffffffffffffffffffff166103a36106db565b73ffffffffffffffffffffffffffffffffffffffff161461042c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6104f2610cd2565b73ffffffffffffffffffffffffffffffffffffffff166105106106db565b73ffffffffffffffffffffffffffffffffffffffff1614610599576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6105c57feee7e69624debd0cb698b9933aa46cea05524b4bdeedf1a40eab9b300576c87660001b6102ad565b6105f17f9308818fbc7749dd1faa8ee1266c56d3412d95a08fb9a0c04226510192cf01d660001b6102ad565b61061d7f734f5476f1ad9da6f3ffe19423c246d6713068fb5b2be8454f256a59d5d9ab0d60001b6102ad565b806001819055506106507f8e6e021c061dd4fd0ff30473cc1103647d633b18004fe94cc53f99775c8d9b2a60001b6102ad565b61067c7f8744afeb888a62003fb010fb6f1782f2f343fe6b62f70707163ed7826a73263f60001b6102ad565b7f9462735486103805dd471af708689460124c6d5016a7b7f897f887cf7020c521816106a66106db565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61070c610cd2565b73ffffffffffffffffffffffffffffffffffffffff1661072a6106db565b73ffffffffffffffffffffffffffffffffffffffff16146107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b816107e07fe194701a6520019bb148bfbec8f0f9c413d836f292cbd1bd32931e1bb412c49b60001b6102ad565b61080c7f37f63e7f9f8eb6efd25331e997fa3e56fbf6f76153ae034b73d0d4957cf625be60001b6102ad565b6108387fdfd00cfb620a30604a310f0b3fc3caa2a87ef22daeed9096d1a264828763067260001b6102ad565b6108647f44f286da3e3b8bdbdd56273bb94b729c090cd3ddf66198d401d8104a7fb6ce3060001b6102ad565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f494e56414c49445f544f4b454e5f41444452455353000000000000000000000081525060200191505060405180910390fd5b6109337f3d0b7825640bfff172fd73ec186199d405c52bc4942aaacd408d44f93c9e246860001b6102ad565b61095f7f60b240e37b2e0550d10d3dbcd7b24fc79397a64f75c4db95c8a6a8107926898660001b6102ad565b61098b7f569c6b7c35240a289fab7ea7e893fdf8634e2263f2f6061b891ba68ff672d9a160001b6102ad565b6109b77f2379775f502fc7f8516631b483cd5abf81b4e364999aaf7d20884c07dd95758a60001b6102ad565b6109e37f10dc1c347cb99123f0518c0980ac8d11e2b2df30701ad2dc22c07aae8490b82260001b6102ad565b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a537fafe1834dec40e4596ab6b44072c853b355eebe474956f3b2f7c7e1962db29c2460001b6102ad565b610a7f7fdb1b0086ca7108f2dd0f7f83e2b084a783dc8fcf810800e4a0f65356c2c9e4e960001b6102ad565b7f6a209be2fe222988596b5f4dd242289077f0f05402d2f1848a97da68c235389482610aa96106db565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050565b610ae8610cd2565b73ffffffffffffffffffffffffffffffffffffffff16610b066106db565b73ffffffffffffffffffffffffffffffffffffffff1614610b8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610cdb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220497ef1d9d37ae9c4deb0c2232b62626d9d0671f491c2e6e1fb9a9ad1c8a708a964736f6c63430007010033";

export class FundLimitsOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FundLimitsOracle> {
    return super.deploy(overrides || {}) as Promise<FundLimitsOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FundLimitsOracle {
    return super.attach(address) as FundLimitsOracle;
  }
  connect(signer: Signer): FundLimitsOracle__factory {
    return super.connect(signer) as FundLimitsOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundLimitsOracleInterface {
    return new utils.Interface(_abi) as FundLimitsOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundLimitsOracle {
    return new Contract(address, _abi, signerOrProvider) as FundLimitsOracle;
  }
}
